<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="28" passed="28">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="13214" started-at="2018-11-19T07:28:50Z" finished-at="2018-11-19T07:29:03Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="7461" started-at="2018-11-19T07:28:50Z" finished-at="2018-11-19T07:28:58Z">
      <class name="testClasses.PlaceOrderTest">
        <test-method status="PASS" signature="verifyValidResponse()[pri:1, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyValidResponse" duration-ms="4746" started-at="2018-11-19T07:28:50Z" finished-at="2018-11-19T07:28:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidResponse -->
        <test-method status="PASS" signature="verifyDistance()[pri:2, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyDistance" duration-ms="350" started-at="2018-11-19T07:28:55Z" finished-at="2018-11-19T07:28:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDistance -->
        <test-method status="PASS" signature="verifyDistanceValuesCount()[pri:2, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyDistanceValuesCount" duration-ms="326" started-at="2018-11-19T07:28:55Z" finished-at="2018-11-19T07:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDistanceValuesCount -->
        <test-method status="PASS" signature="verifyInValidResponse()[pri:2, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyInValidResponse" duration-ms="222" started-at="2018-11-19T07:28:56Z" finished-at="2018-11-19T07:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidResponse -->
        <test-method status="PASS" signature="verifyInValidResponsePayload()[pri:2, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyInValidResponsePayload" duration-ms="185" started-at="2018-11-19T07:28:56Z" finished-at="2018-11-19T07:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidResponsePayload -->
        <test-method status="PASS" signature="verifyResponseWithInvalidPayload()[pri:2, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyResponseWithInvalidPayload" duration-ms="197" started-at="2018-11-19T07:28:56Z" finished-at="2018-11-19T07:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResponseWithInvalidPayload -->
        <test-method status="PASS" signature="VerifyBadRequest()[pri:3, instance:testClasses.PlaceOrderTest@6cd8737]" name="VerifyBadRequest" duration-ms="208" started-at="2018-11-19T07:28:56Z" finished-at="2018-11-19T07:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyBadRequest -->
        <test-method status="PASS" signature="VerifyBadRequestAttribute()[pri:3, instance:testClasses.PlaceOrderTest@6cd8737]" name="VerifyBadRequestAttribute" duration-ms="175" started-at="2018-11-19T07:28:57Z" finished-at="2018-11-19T07:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyBadRequestAttribute -->
        <test-method status="PASS" signature="verifyFareCurrency()[pri:3, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyFareCurrency" duration-ms="305" started-at="2018-11-19T07:28:57Z" finished-at="2018-11-19T07:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFareCurrency -->
        <test-method status="PASS" signature="verifyTripFare()[pri:3, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyTripFare" duration-ms="235" started-at="2018-11-19T07:28:57Z" finished-at="2018-11-19T07:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTripFare -->
        <test-method status="PASS" signature="verifyTripFare9to5()[pri:3, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyTripFare9to5" duration-ms="222" started-at="2018-11-19T07:28:57Z" finished-at="2018-11-19T07:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTripFare9to5 -->
        <test-method status="PASS" signature="verifyValidResponseWithTime()[pri:4, instance:testClasses.PlaceOrderTest@6cd8737]" name="verifyValidResponseWithTime" duration-ms="233" started-at="2018-11-19T07:28:57Z" finished-at="2018-11-19T07:28:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidResponseWithTime -->
      </class> <!-- testClasses.PlaceOrderTest -->
    </test> <!-- Test -->
    <test name="test1" duration-ms="345" started-at="2018-11-19T07:28:58Z" finished-at="2018-11-19T07:28:58Z">
      <class name="testClasses.FetchOrderTest">
        <test-method status="PASS" signature="getValidOrderResponse()[pri:1, instance:testClasses.FetchOrderTest@60addb54]" name="getValidOrderResponse" duration-ms="180" started-at="2018-11-19T07:28:58Z" finished-at="2018-11-19T07:28:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getValidOrderResponse -->
        <test-method status="PASS" signature="getInValidResponse()[pri:2, instance:testClasses.FetchOrderTest@60addb54]" name="getInValidResponse" duration-ms="165" started-at="2018-11-19T07:28:58Z" finished-at="2018-11-19T07:28:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInValidResponse -->
      </class> <!-- testClasses.FetchOrderTest -->
    </test> <!-- test1 -->
    <test name="test3" duration-ms="1278" started-at="2018-11-19T07:28:58Z" finished-at="2018-11-19T07:28:59Z">
      <class name="testClasses.TakeOrderTest">
        <test-method status="PASS" signature="verifyValidResponse()[pri:1, instance:testClasses.TakeOrderTest@68837a77]" name="verifyValidResponse" duration-ms="227" started-at="2018-11-19T07:28:58Z" finished-at="2018-11-19T07:28:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidResponse -->
        <test-method status="PASS" signature="verifyInValidOrderResponse()[pri:2, instance:testClasses.TakeOrderTest@68837a77]" name="verifyInValidOrderResponse" duration-ms="458" started-at="2018-11-19T07:28:58Z" finished-at="2018-11-19T07:28:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidOrderResponse -->
        <test-method status="PASS" signature="verifyInvalidFlowResponse()[pri:3, instance:testClasses.TakeOrderTest@68837a77]" name="verifyInvalidFlowResponse" duration-ms="368" started-at="2018-11-19T07:28:59Z" finished-at="2018-11-19T07:28:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidFlowResponse -->
        <test-method status="PASS" signature="verifyInvalidFlowResponseMessage()[pri:4, instance:testClasses.TakeOrderTest@68837a77]" name="verifyInvalidFlowResponseMessage" duration-ms="223" started-at="2018-11-19T07:28:59Z" finished-at="2018-11-19T07:28:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidFlowResponseMessage -->
      </class> <!-- testClasses.TakeOrderTest -->
    </test> <!-- test3 -->
    <test name="test4" duration-ms="1960" started-at="2018-11-19T07:28:59Z" finished-at="2018-11-19T07:29:01Z">
      <class name="testClasses.CompleteOrderTest">
        <test-method status="PASS" signature="verifyValidResponse()[pri:1, instance:testClasses.CompleteOrderTest@15975490]" name="verifyValidResponse" duration-ms="205" started-at="2018-11-19T07:28:59Z" finished-at="2018-11-19T07:29:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidResponse -->
        <test-method status="PASS" signature="verifyInValidOrderResponse()[pri:2, instance:testClasses.CompleteOrderTest@15975490]" name="verifyInValidOrderResponse" duration-ms="402" started-at="2018-11-19T07:29:00Z" finished-at="2018-11-19T07:29:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidOrderResponse -->
        <test-method status="PASS" signature="verifyInvalidFlowResponse()[pri:3, instance:testClasses.CompleteOrderTest@15975490]" name="verifyInvalidFlowResponse" duration-ms="422" started-at="2018-11-19T07:29:00Z" finished-at="2018-11-19T07:29:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidFlowResponse -->
        <test-method status="PASS" signature="verifyInvalidFlowResponseMessage()[pri:3, instance:testClasses.CompleteOrderTest@15975490]" name="verifyInvalidFlowResponseMessage" duration-ms="195" started-at="2018-11-19T07:29:00Z" finished-at="2018-11-19T07:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidFlowResponseMessage -->
        <test-method status="PASS" signature="verifyInvalidFlowResponseMessageForCancelled()[pri:4, instance:testClasses.CompleteOrderTest@15975490]" name="verifyInvalidFlowResponseMessageForCancelled" duration-ms="370" started-at="2018-11-19T07:29:01Z" finished-at="2018-11-19T07:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidFlowResponseMessageForCancelled -->
        <test-method status="PASS" signature="verifyInvalidFlowResponseMessageForOngoing()[pri:4, instance:testClasses.CompleteOrderTest@15975490]" name="verifyInvalidFlowResponseMessageForOngoing" duration-ms="357" started-at="2018-11-19T07:29:01Z" finished-at="2018-11-19T07:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidFlowResponseMessageForOngoing -->
      </class> <!-- testClasses.CompleteOrderTest -->
    </test> <!-- test4 -->
    <test name="test5" duration-ms="2088" started-at="2018-11-19T07:29:01Z" finished-at="2018-11-19T07:29:03Z">
      <class name="testClasses.CancelOrderTest">
        <test-method status="PASS" signature="verifyValidResponse()[pri:1, instance:testClasses.CancelOrderTest@617c74e5]" name="verifyValidResponse" duration-ms="516" started-at="2018-11-19T07:29:01Z" finished-at="2018-11-19T07:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidResponse -->
        <test-method status="PASS" signature="verifyInValidOrderResponse()[pri:2, instance:testClasses.CancelOrderTest@617c74e5]" name="verifyInValidOrderResponse" duration-ms="405" started-at="2018-11-19T07:29:02Z" finished-at="2018-11-19T07:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidOrderResponse -->
        <test-method status="PASS" signature="verifyInvalidFlowResponseMessageForCancelled()[pri:3, instance:testClasses.CancelOrderTest@617c74e5]" name="verifyInvalidFlowResponseMessageForCancelled" duration-ms="605" started-at="2018-11-19T07:29:02Z" finished-at="2018-11-19T07:29:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidFlowResponseMessageForCancelled -->
        <test-method status="PASS" signature="verifyInvalidFlowResponseMessageForOngoing()[pri:3, instance:testClasses.CancelOrderTest@617c74e5]" name="verifyInvalidFlowResponseMessageForOngoing" duration-ms="560" started-at="2018-11-19T07:29:03Z" finished-at="2018-11-19T07:29:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidFlowResponseMessageForOngoing -->
      </class> <!-- testClasses.CancelOrderTest -->
    </test> <!-- test5 -->
  </suite> <!-- Suite -->
</testng-results>
